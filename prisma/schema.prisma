generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  image       String
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  quantity  Int
  price     Float
  productId String
  product   Product @relation(fields: [productId], references: [id])
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}

enum DeliveryStatus {
  PENDING
  DELIVERED
  CANCELLED
}

model Order {
  id              String         @id @default(cuid())
  deliveryAddress String
  deliveryStatus  DeliveryStatus // Use enum type
  totalPrice      Float
  paymentDetails  String
  paymentStatus   PaymentStatus  // Use enum type
  paymentIntentId String
  user            User           @relation(fields: [userId], references: [id])
  userId          String
  orderItems      OrderItem[]    // Added relation field for the opposite side of OrderItem
  createdAt       DateTime       @default(now())
}
